jsXmlParser={},jsXmlParser.parseXml=function(r){var a={},s=0;if(jsXmlParser._parseNode(r,a),jsXmlParser.arrayPaths)for(s=0;s<jsXmlParser.arrayPaths.length;s++)a=jsXmlParser._validateArrayPath(jsXmlParser.arrayPaths[s],a);return a},jsXmlParser._parseNode=function(r,a){var s=/<([a-zA-Z0-9]*)(.*=".*")*?>((.|\s)*?)<\/\1>/g,e=/\s*(.*?)="(.*?)"/g,t=r.match(s),l=[],i={},n=0,h=[],m=[],y=0;if(t)for(n=0;n<t.length;n++){if(l=s.exec(t[n]),a[l[1]]?Array.isArray(a[l[1]])?a[l[1]].push({}):(i={},i=a[l[1]],a[l[1]]=[],a[l[1]].push(i),a[l[1]].push({})):a[l[1]]={},l[2])for(h=l[2].match(e)||[],n=0;n<h.length;n++)m=e.exec(h[n]),Array.isArray(a[l[1]])?(y=a[l[1]].length-1,a[l[1]][y][m[1]]=m[2]):a[l[1]][m[1]]=m[2];var P=l[3].match(s);P?Array.isArray(a[l[1]])?(y=a[l[1]].length-1,jsXmlParser._parseNode(l[3],a[l[1]][y])):jsXmlParser._parseNode(l[3],a[l[1]]):jsXmlParser._isEmpty(a[l[1]])?a[l[1]]=l[3]:Array.isArray(a[l[1]])?a[l[1]].push(l[3]):(i={},i=a[l[1]],a[l[1]]=[],a[l[1]].push(i),a[l[1]].push(l[3]))}},jsXmlParser._isEmpty=function(r){for(var a in r)if(a)return!1;return!0},jsXmlParser._validateArrayPath=function(r,a){var s=r.split(".");return a=jsXmlParser._updateArray(s,a)},jsXmlParser._updateArray=function(r,a){if(r.length){var s=r[0];if(r.splice(0,1),a[s])if(r.length&&Array.isArray(a[s]))for(var e=0;e<a[s].length;e++)a[s][e]=jsXmlParser._updateArray(r,a[s][e]);else a[s]=jsXmlParser._updateArray(r,a[s])}else if(!Array.isArray(a)){var t=a;a=[],a.push(t)}return a};